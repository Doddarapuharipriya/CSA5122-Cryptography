#include <stdio.h>
#include <stdint.h>

// Define permutation tables
const int PC1[] = {57, 49, 41, 33, 25, 17, 9,
                   1, 58, 50, 42, 34, 26, 18,
                   10, 2, 59, 51, 43, 35, 27,
                   19, 11, 3, 60, 52, 44, 36};

const int PC2[] = {14, 17, 11, 24, 1, 5,
                   3, 28, 15, 6, 21, 10,
                   23, 19, 12, 4, 26, 8,
                   16, 7, 27, 20, 13, 2,
                   41, 52, 31, 37, 47, 55,
                   30, 40, 51, 45, 33, 48,
                   44, 49, 39, 56, 34, 53,
                   46, 42, 50, 36, 29, 32};

// Perform left circular shift
uint64_t leftCircularShift(uint64_t val, int shift) {
    return (val << shift) | (val >> (28 - shift));
}

// Generate 16 subkeys
void generateSubkeys(uint64_t key, uint64_t subkeys[]) {
    // Apply permutation choice 1 (PC1)
    uint64_t permuted = 0;
    for (int i = 0; i < 56; i++) {
        int bitPos = PC1[i] - 1;
        permuted <<= 1;
        permuted |= (key >> (64 - bitPos)) & 1;
    }

    // Split into left and right parts
    uint32_t left = permuted >> 28;
    uint32_t right = permuted & 0xFFFFFFF;

    // Generate 16 subkeys
    for (int round = 0; round < 16; round++) {
        // Perform left circular shifts
        left = leftCircularShift(left, (round < 2 || round == 8 || round == 15) ? 1 : 2);
        right = leftCircularShift(right, (round < 2 || round == 8 || round == 15) ? 1 : 2);

        // Combine left and right parts
        uint64_t combined = ((uint64_t)left << 28) | right;

        // Apply permutation choice 2 (PC2)
        subkeys[round] = 0;
        for (int i = 0; i < 48; i++) {
            int bitPos = PC2[i] - 1;
            subkeys[round] <<= 1;
            subkeys[round] |= (combined >> (56 - bitPos)) & 1;
        }
    }
}

int main() {
    // Example initial key (64-bit)
    uint64_t initialKey = 0x133457799BBCDFF1;

    // Array to store 16 subkeys (48 bits each)
    uint64_t subkeys[16];

    // Generate subkeys
    generateSubkeys(initialKey, subkeys);

    // Print subkeys
    printf("Subkeys:\n");
    for (int i = 0; i < 16; i++) {
        printf("%2d: %012lX\n", i + 1, subkeys[i]);
    }

    return 0;
}
